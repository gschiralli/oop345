Name: Gianni Schiralli
ID: 161166194
Email: gschiralli@myseneca.ca

During this workshop i learned how to create a class template and template class variables. I also learned how to specialize the templated class variable as well as specialize a templated class member function for specific types. We used specialization in this workshop for the operator += so that when we are working with the string type the parameter value gets concatanated to the current value. We also worked with static templated class variables such as the "initial" variable. This variable is only initalized once outside of the class because it is a static variable. It does not need any specialization because it is of the template type parameter and is instatiated using the universal {} which sets the given type to a safe state. This variable is used in our two constructor prototype as our default value for the value paramater. The reason why we use the "initial" variable as a default value is because the "initial" type will always be of the correct type for the paramater because it's type will be that of the family of class created. Lastly, I also learned about proper implementation of template classes. All template classes must be coded and implemented in the header file so the compiler can read the header file and all its functionality and generate a class for the specified type. 
